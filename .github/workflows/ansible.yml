name: Run Ansible Playbook

on:
  workflow_run:
    workflows: ["Terraform Apply"]
    types:
      - completed

jobs:
  ansible:
    runs-on: [self-hosted, gh-runner]

    steps:
      # Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download Terraform outputs
      - name: Download Terraform Outputs
        uses: actions/download-artifact@v3
        with:
          name: terraform-output
          path: ./terraform

      # Setup Python for Ansible
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install Ansible
      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto3

      # SSH KEY
      - name: Setup SSH Key and Inventory
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > ~/.ssh/deployer_key
          chmod 600 ~/.ssh/deployer_key

          # Get the public IP from Terraform output
          WEB_EIP=$(jq -r '.web_eip.value' ./terraform/tf_output.json)

          # Add the host key to known_hosts
          ssh-keyscan -H $WEB_EIP >> ~/.ssh/known_hosts

          # Create dynamic inventory file for Ansible
          echo "[web]" > ansible/inventory.ini
          echo "$WEB_EIP ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/deployer_key" >> ansible/inventory.ini

      

      # Run Ansible playbook
      - name: Run Ansible Playbook
        run: ansible-playbook -i ansible/inventory.ini ansible/playbook.yml
